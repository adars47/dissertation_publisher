{"version":3,"sources":["Components/Decrypt.js","Components/FetcherComponent.js","Components/Web3Component.js","Pages/Decrypt.js","App.js","reportWebVitals.js","index.js"],"names":["CryptoJS","require","decryptAndDownload","async","blob","filename","decryption_key","blob_str","text","dec","AES","decrypt","toString","enc","Utf8","alertify","error","base64StringToBlob","type","csvURL","window","URL","createObjectURL","tempLink","document","createElement","href","setAttribute","click","download","getFiles","filepath","fetch","method","body","JSON","stringify","filePath","then","response","filepaths","split","n","lastIndexOf","substring","catch","console","EthCrypto","WebComponent","props","web3a","Web3","hash","transactionId","encKey","setEncKey","useState","getTransaction","undefined","eth","err","result","value","success","getFilePath","transaction_data","transaction_data_mod","replace","decryptWithPrivateKey","headers","get","json","map","input","useEffect","_jsx","registerPlugin","FilePondPluginFileEncode","Decrypt","setTransactionId","decryptionKey","setdecryptionKey","_jsxs","children","Typography","variant","color","component","align","Container","maxWidth","Box","onSubmit","event","preventDefault","data","FormData","currentTarget","patient_private_key","trim","signed_encryption_key","sx","marginTop","display","flexDirection","alignItems","TextField","id","name","label","padding","Button","App","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"unBAIA,MAAMA,EAAWC,EAAQ,KAiBVC,MAfYC,MAAOC,EAAKC,EAASC,KAC5C,IAAIC,QAAiBH,EAAKI,OACtBC,QAAYT,EAASU,IAAIC,QAAQJ,EAASD,GAAgBM,SAASZ,EAASa,IAAIC,MAChFL,GAEAM,IAASC,MAAM,gCAEnBZ,EAAOa,YAAmBR,EAAIL,EAAKc,MACnC,IAAIC,EAASC,OAAOC,IAAIC,gBAAgBlB,GACxC,IAAImB,EAAWC,SAASC,cAAc,KACtCF,EAASG,KAAOP,EAChBI,EAASI,aAAa,WAAYtB,GAClCkB,EAASK,OAAO,EChBpB,MAsBMC,EAAWA,CAACzB,EAAKC,KAEnB,IAAIc,EAASC,OAAOC,IAAIC,gBAAgBlB,GACxC,IAAImB,EAAWC,SAASC,cAAc,KACtCF,EAASG,KAAOP,EAChBI,EAASI,aAAa,WAAYtB,GAClCkB,EAASK,OAAO,EAGLE,MA/BCA,CAACC,EAASzB,KACtB0B,MAAM,gCAAgC,CAClCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACC,SAASN,MAElCO,MAAMC,GAAaA,EAASnC,SAC5BkC,MAAMlC,IACH,IAAIoC,EAAYT,EAASU,MAAM,KAC/B,MAAMC,EAAIX,EAASY,YAAY,KACzBtC,EAAW0B,EAASa,UAAUF,EAAI,GACtB,aAAfF,EAAU,GAKbX,EAASzB,EAAKC,GAHVH,EAAmBE,EAAKC,EAASC,EAGd,IAG1BuC,OAAM7B,GAAS8B,QAAQ9B,MAAMA,IAAO,E,OCfzC,MAAM+B,EAAY9C,EAAQ,KAuDX+C,MArDOC,IAClB,MAAMC,EAAQ,IAAIC,IAAK,yBACjBC,EAAOH,EAAMI,eACZC,EAAOC,GAAaC,mBAAS,IAoB9BC,EAAiBA,KACP,KAATL,GAAwB,OAATA,QAA0BM,IAATN,GAIrCF,EAAMS,IAAIF,eAAeL,GAAM,SAASQ,EAAKC,GAC7B,OAAXA,EAMCA,EAAOC,QACP/C,IAASgD,QAAQ,qCA/BLC,EAACC,EAAiB3D,KAElC,IAAI4D,EAAuBD,EAAiBE,QAAQ,KAAK,IACzDnC,MAAM,8CAA8CkC,GACnD5B,MAAKnC,UACFG,QAAuByC,EAAUqB,sBAAsB9D,EAAeiC,EAAS8B,QAAQC,IAAI,qBACpF/B,EAASgC,UAEnBjC,MAAKiC,IACFA,EAAKC,KAAKzC,IACND,EAASC,EAASzB,EAAe,GACnC,IAELuC,OAAM7B,GAAS8B,QAAQ9B,MAAMA,IAAO,EAmBjCgD,CAAYH,EAAOY,MAAMxB,EAAM3C,iBANjCS,IAASC,MAAM,yBAQrB,GAAE,EAMF,OAHA0D,qBAAU,KACRjB,GAAgB,GAChB,CAACL,IAECuB,cAAA,SAAW,EC/CnBC,yBAAeC,KAsEAC,MAlEf,WACI,MAAOzB,EAAc0B,GAAoBvB,mBAAS,KAC3CwB,EAAcC,GAAoBzB,mBAAS,IAuBlD,OAAQ0B,eAAA,OAAAC,SAAA,CACJR,cAAC3B,EAAY,CAACK,cAAeA,EAAe/C,eAAgB0E,IAC5DL,cAACS,IAAU,CAACC,QAAQ,KAAKC,MAAM,UAAUC,UAAU,MAAMC,MAAM,SAAQL,SAAC,8BAGxER,cAACc,IAAS,CAACF,UAAU,OAAOG,SAAS,KAAIP,SACrCD,eAACS,IAAG,CACJJ,UAAU,OACVK,SA5BezF,UAEnB0F,EAAMC,iBACN,MAAMC,EAAO,IAAIC,SAASH,EAAMI,eAChC,IAAIC,EAAsBH,EAAKzB,IAAI,eAAe6B,OAC9CC,EAAwBL,EAAKzB,IAAI,yBAAyB6B,OACnC,KAAxBD,QAAqDxC,GAAvBwC,GAA4D,OAAxBA,GAIxC,KAA1BE,QAAyD1C,GAAzB0C,GAAgE,OAA1BA,IAIzErB,EAAiBqB,GACjBnB,EAAiBiB,GAAoB,EAcjCG,GAAI,CACAC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UACdtB,SAAA,CAEER,cAACS,IAAU,CAACC,QAAQ,KAAKC,MAAM,UAAUC,UAAU,MAAKJ,SAAC,2CAGzDR,cAAC+B,IAAS,CACNC,GAAG,cACHC,KAAK,cACLC,MAAM,sBACNR,GAAI,CAAES,QAAS,KAGnCnC,cAACS,IAAU,CAACC,QAAQ,KAAKC,MAAM,UAAUC,UAAU,MAAKJ,SAAC,oCAGzCR,cAAC+B,IAAS,CACNC,GAAG,wBACHC,KAAK,wBACLC,MAAM,iBACNR,GAAI,CAAES,QAAS,KAEnBnC,cAACoC,IAAM,CAAC1B,QAAQ,YAAYnE,KAAK,SAAQiE,SAAC,mBAI1D,EChEe6B,MARf,WACE,OACErC,cAAA,OAAAQ,SACER,cAACG,EAAO,KAGd,ECIemC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7E,MAAK8E,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAExB,ECHWQ,IAASC,WAAWnG,SAASoG,eAAe,SACpDC,OACHlD,cAACmD,IAAMC,WAAU,CAAA5C,SACfR,cAACqC,EAAG,OAORC,G","file":"static/js/main.d0309405.chunk.js","sourcesContent":["import { base64StringToBlob } from 'blob-util';\nimport alertify from 'alertifyjs';\nimport 'alertifyjs/build/css/alertify.css';\n\nconst CryptoJS = require(\"crypto-js\");\n\nconst decryptAndDownload = async (blob,filename,decryption_key) => {\n    let blob_str = await blob.text();\n    let dec = await CryptoJS.AES.decrypt(blob_str,decryption_key).toString(CryptoJS.enc.Utf8);\n    if(!dec)\n    {\n        alertify.error(\"Invalid private key supplied\");\n    }\n    blob = base64StringToBlob(dec,blob.type);\n    var csvURL = window.URL.createObjectURL(blob);\n    let tempLink = document.createElement('a');\n    tempLink.href = csvURL;\n    tempLink.setAttribute('download', filename);\n    tempLink.click();\n};\n\nexport default decryptAndDownload;","import decryptAndDownload from \"../Components/Decrypt\";\n\nconst getFiles= (filepath,decryption_key) => {\n    fetch('http://127.0.0.1:2222/getFile',{\n        method: \"POST\",\n        body: JSON.stringify({filePath:filepath})\n    })\n    .then((response) => response.blob())\n    .then((blob) => {\n        let filepaths = filepath.split(\"/\");\n        const n = filepath.lastIndexOf('/');\n        const filename = filepath.substring(n + 1);\n        if(filepaths[9]===\"personal\")\n        {\n            decryptAndDownload(blob,filename,decryption_key);\n            return;\n        }\n        download(blob,filename);\n\n    })\n    .catch(error => console.error(error));\n\n}\n\nconst download = (blob,filename) =>\n{\n    var csvURL = window.URL.createObjectURL(blob);\n    let tempLink = document.createElement('a');\n    tempLink.href = csvURL;\n    tempLink.setAttribute('download', filename);\n    tempLink.click();\n}\n\nexport default getFiles;","import React,{ useEffect,useState } from 'react';\nimport Web3 from 'web3'\nimport alertify from 'alertifyjs';\nimport 'alertifyjs/build/css/alertify.css';\nimport getFiles from './FetcherComponent';\nconst EthCrypto = require('eth-crypto');\n\nconst WebComponent = (props) => {\n    const web3a = new Web3(\"http://127.0.0.1:7545\");\n    const hash = props.transactionId;\n    const [encKey,setEncKey] = useState(\"\");\n\n    const getFilePath = (transaction_data,decryption_key) => {\n    \n        let transaction_data_mod = transaction_data.replace(\"0x\",\"\");\n        fetch('http://127.0.0.1:2222/getFilePath?filepath='+transaction_data_mod)\n        .then(async (response) => {\n            decryption_key = await EthCrypto.decryptWithPrivateKey(decryption_key,response.headers.get('X-Signed-Enc-Key'))\n            return response.json()\n        })\n        .then(json => {\n            json.map((filepath)=>{\n                getFiles(filepath,decryption_key);\n            });\n        })\n        .catch(error => console.error(error));\n    \n    };\n    \n    // const hash = \"0x4e24ae7f92dc2c9fd1009a0f1de017ca6f43265bdc8efa1ec84553dcac745b89\";\n    const getTransaction = () =>{\n        if(hash === \"\" || hash === null || hash === undefined)\n        {\n            return ;\n        }\n      web3a.eth.getTransaction(hash, function(err, result) {\n        if(result === null)\n        {\n          alertify.error('Invalid transaction Id');      \n          return;\n        }\n    \n        if (result.value) {\n            alertify.success('Sucessfully verified transaction!');\n            getFilePath(result.input,props.decryption_key);\n        }\n    });\n    }\n\n    useEffect(()=>{\n      getTransaction();\n    },[hash]);\n    return (\n        <div></div>\n    );\n    \n}\n\n\n\nexport default WebComponent;\n","import { FilePond,registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginFileEncode from 'filepond-plugin-file-encode';\nimport { useState } from \"react\";\nimport { Typography, Box, Container, Button, TextField } from \"@mui/material\";\nimport WebComponent from '../Components/Web3Component';\nregisterPlugin(FilePondPluginFileEncode);\n\n\n\nfunction Decrypt(){\n    const [transactionId,setTransactionId] = useState(\"\");\n    const [decryptionKey,setdecryptionKey] = useState(\"\");\n    \n\n    const savepatientKey = async (event) =>\n    {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        let patient_private_key = data.get('private_key').trim();\n        let signed_encryption_key = data.get('signed_encryption_key').trim();\n        if(patient_private_key === \"\" || patient_private_key == undefined || patient_private_key === null)\n        {\n            return ;\n        }\n        if(signed_encryption_key === \"\" || signed_encryption_key == undefined || signed_encryption_key === null)\n        {\n            return ;\n        }\n        setTransactionId(signed_encryption_key);\n        setdecryptionKey(patient_private_key);\n    }\n\n\n    \n    return (<div>\n        <WebComponent transactionId={transactionId} decryption_key={decryptionKey}/>\n        <Typography variant=\"h3\" color=\"inherit\" component=\"div\" align='center'>\n                Patient Decryption Portal \n        </Typography>\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Box\n            component=\"form\" \n            onSubmit={savepatientKey}\n            sx={{\n                marginTop: 8,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n            }}\n            >\n                <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\n                Please input the patient's private key \n                </Typography>\n                <TextField\n                    id=\"private_key\"\n                    name=\"private_key\"\n                    label=\"Patient private Key\"\n                    sx={{ padding: 1}}\n                />\n\n<Typography variant=\"h6\" color=\"inherit\" component=\"div\">\n                Please input the transaction ID \n                </Typography>\n                <TextField\n                    id=\"signed_encryption_key\"\n                    name=\"signed_encryption_key\"\n                    label=\"Transaction id\"\n                    sx={{ padding: 1}}\n                />\n                <Button variant=\"contained\" type=\"submit\">Decrypt</Button>\n        </Box>\n    </Container>\n    </div>)\n}\n\nexport default Decrypt;","import Decrypt from './Pages/Decrypt';\n\nfunction App() {\n  return (\n    <div>\n      <Decrypt></Decrypt>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}